---
groups:
  - name: bosh-google-cpi-release
    jobs:
      - test-unit
      - build-candidate
      - run-bats
      - run-int
      - teardown-infrastructure

jobs:
  - name: test-unit
    plan:
      - aggregate:
        - {trigger: false, get: bosh-cpi-src, resource: bosh-cpi-src-in}
      - task: unit-tests
        file: bosh-cpi-src/ci/tasks/unit-tests.yml

  - name: build-candidate
    serial: true
    plan:
      - aggregate:
        - {trigger: false, passed: [test-unit], get: bosh-cpi-src,   resource: bosh-cpi-src-in}
        - {trigger: false,                     get: version-semver, params: {bump: patch}}
      - put: version-semver
        params: {file: version-semver/number}
      - task: build-release
        file: bosh-cpi-src/ci/tasks/build-candidate.yml
      - put: bosh-cpi-dev-artifacts
        params: {file: candidate/*.tgz}
      - put: bosh-cpi-dev-artifacts-sha1
        params: {file: candidate/*.tgz.sha1}

  - name: teardown-infrastructure
    # serial_groups: [run-bats, run-int]
    plan:
      - aggregate:
        - {get: bosh-cpi-src, resource: bosh-cpi-src-in}
      - put: terraform
        params:
          terraform_source: bosh-cpi-src/ci/terraform
          env_name: patch-follower
          action: destroy
        get_params:
          action: destroy

  - name: run-bats
    serial_groups: [run-bats]
    plan:
      - aggregate:
        - {trigger: false,  get: bosh-cpi-src, resource: bosh-cpi-src-in}
        - {trigger: false,  get: cpi-release, resource: bosh-cpi-dev-artifacts}
        - {trigger: false, get: stemcell, resource: google-ubuntu-stemcell}
        - {trigger: false, get: bosh-deployment}
        - {trigger: false, get: bosh-cli}
        - {trigger: false, get: certification}
        - {trigger: false, get: bosh-release}
        - {trigger: false, get: bats}
        - {trigger: false, get: dummy-boshrelease}
      - put: terraform
        params:
          terraform_source: bosh-cpi-src/ci/terraform
          delete_on_failure: true
          generate_random_name: true
      - task: prepare-director
        file: bosh-cpi-src/ci/tasks/prepare-director.yml
        input_mapping:
          environment: terraform
        params:
          google_json_key_data: {{google_json_key_data}}
          director_username:    {{director_username}}
          director_password:    {{director_password}}
      - do:
        - task: deploy-director
          file: certification/shared/tasks/deploy-director.yml
          input_mapping:
            pipelines: certification
            environment: terraform
        - task: deploy-dummy
          file: bosh-cpi-src/ci/tasks/deploy-dummy.yml
          params:
            google_project:           {{google_project}}
            google_region:            {{google_region}}
            google_zone:              {{google_zone}}
            google_json_key_data:     {{google_json_key_data}}
            base_os:                  Ubuntu
            stemcell_name:            bosh-google-kvm-ubuntu-trusty-go_agent
            director_username:        {{director_username}}
            director_password:        {{director_password}}
        - task: run-bats
          file: bosh-cpi-src/ci/tasks/run-bats.yml
          params:
            google_project:                             {{google_project}}
            google_region:                              {{google_region}}
            google_zone:                                {{google_zone}}
            google_json_key_data:                       {{google_json_key_data}}
            base_os:                                    Ubuntu
            stemcell_name:                              bosh-google-kvm-ubuntu-trusty-go_agent
            bat_vcap_password:                          {{bat_vcap_password}}
            private_key_data:                           {{private_key_data}}
        ensure:
          do:
            - task: teardown
              file: bosh-cpi-src/ci/tasks/teardown.yml
            - put: terraform
              params:
                terraform_source: bosh-cpi-src/ci/terraform
                env_name_file: terraform/name
                action: destroy
              get_params:
                action: destroy

  - name: run-int
    # serial_groups: [run-int]
    plan:
      - aggregate:
        - {trigger: false, get: bosh-cpi-src, resource: bosh-cpi-src-in}
        - {trigger: false, get: stemcell, resource: google-ubuntu-stemcell}
      - put: terraform
        params:
          terraform_source: bosh-cpi-src/ci/terraform
          delete_on_failure: true
          generate_random_name: true
      - do:
        - task: run-int
          file: bosh-cpi-src/ci/tasks/run-int.yml
          input_mapping:
            environment: terraform
          params:
            google_project:                   {{google_project}}
            google_region:                    {{google_region}}
            google_zone:                      {{google_zone}}
            google_json_key_data:             {{google_json_key_data}}
        ensure:
          put: terraform
          params:
            terraform_source: bosh-cpi-src/ci/terraform
            env_name_file: terraform/name
            action: destroy
          get_params:
            action: destroy

resources:
  - name: bosh-cpi-src-in
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/bosh-google-cpi-release.git
      branch: terraform-2
      ignore_paths:
        - .final_builds/**/*.yml
        - releases/**/*.yml

  - name: certification
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/bosh-cpi-certification
      branch: gcp-terraform

  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment
      branch: master

  - name: bosh-cpi-dev-artifacts
    type: gcs-resource
    source:
      json_key: {{google_json_key_data}}
      bucket:   {{google_releases_bucket_name}}
      regexp:   bosh-google-cpi-([0-9]+\.[0-9]+\.[0-9]+)\.tgz

  - name: bosh-cpi-dev-artifacts-sha1
    type: gcs-resource
    source:
      json_key: {{google_json_key_data}}
      bucket:   {{google_releases_bucket_name}}
      regexp:   bosh-google-cpi-([0-9]+\.[0-9]+\.[0-9]+)\.tgz.sha1

  - name: version-semver
    type: semver
    source:
      key:               current-version
      bucket:            {{version_semver_bucket_name}}
      access_key_id:     {{version_semver_access_key}}
      secret_access_key: {{version_semver_secret_key}}
      region_name:       {{version_semver_region}}

  - name: bosh-cli
    type: s3
    source:
      regexp: bosh-cli-([0-9.]+)-linux-amd64
      bucket: bosh-cli-artifacts
      region_name: us-east-1

  - name: bosh-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/bosh

  - name: bats
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
      branch: master

  - name: dummy-boshrelease
    type: git
    source:
      uri: https://github.com/pivotal-cf-experimental/dummy-boshrelease.git
      branch: master

  - name: google-ubuntu-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-google-kvm-ubuntu-trusty-go_agent

  # - name: google-ubuntu-stemcell
  #   type: gcs-resource
  #   source:
  #     json_key: {{google_json_key_data}}
  #     bucket: bosh-gce-raw-stemcells
  #     regexp: bosh-stemcell-([0-9\.]+)-google-kvm-ubuntu-trusty-go_agent-raw.tar.gz

  - name: terraform
    type: terraform_type
    source:
      storage:
        access_key_id:     {{version_semver_access_key}}
        secret_access_key: {{version_semver_secret_key}}
        bucket:            {{version_semver_bucket_name}}
        region_name:       {{version_semver_region}}
        bucket_path:       terraform/gcp-state
      vars:
        google_project:          {{google_project}}
        google_region:           {{google_region}}
        google_zone:             {{google_zone}}
        google_json_key_data:    {{google_json_key_data}}

resource_types:
  - name: gcs-resource
    type: docker-image
    source:
      repository: frodenas/gcs-resource

  - name: terraform_type
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
